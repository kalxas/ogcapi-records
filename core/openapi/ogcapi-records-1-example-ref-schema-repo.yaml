openapi: 3.0.3
info:
  title: "OGC API - Records - Part 1: Core"
  version: '1.0.0'
  description: |-
    This is a sample OpenAPI definition that conforms to the conformance
    classes of the  "OGC API - Records - Part 1: Core" standard:

    * Searchable Catalog
    * Searchable Catalog - Sorting
    * Local Resources Catalog
    * Local Resources Catalog - Query Parameters
    * Local Resources Catalog - Sorting
    * OpenAPI 3.0
    
    This example is a generic definition that uses path parameters to
    describe all catalogs and records.  The generic OpenAPI definition
    does not provide any details on the catalogs or the record content.
    This information is only available by accessing the catalog and its
    records.
  contact:
    name: CubeWerx Inc.
    email: pvretano@cubewerx.com
    url: 'https://www.cubewerx.com'
  license:
    name: CC-BY 4.0 license
    url: 'https://creativecommons.org/licenses/by/4.0/'
servers:
  - url: 'https://example.org/data'
    description: Production server
  - url: 'https://example.org/data-dev'
    description: Development server
tags:
  - name: Capabilities
    description: |-
      essential characteristics of this API
  - name: Conformance
    description: |-
      list of conformance classes implemented by this API
  - name: Collections
    description: |-
      list of catalogs offered by this API
  - name: Collection
    description: |-
      description of a catalog offered by this API
  - name: Sortables
    description: |-
      list of record properties by which responses can be sorted
  - name: Records
    description: |-
      access to records
  - name: Record
    description: |-
      access to a single record
paths:
  '/':
    get:
      tags:
        - Capabilities
      summary: landing page
      description: |-
        The landing page provides links to the API definition, the conformance
        statements and to the record collections in this dataset.
      operationId: getLandingPage
      responses:
        '200':
          $ref: 'responses/LandingPage.yaml'
        '4XX':
          $ref: 'responses/BadRequest.yaml'
        '406':
          $ref: 'responses/NotAcceptable.yaml'
        '5XX':
          $ref: 'responses/ServerError.yaml'
  '/conformance':
    get:
      tags:
        - Conformance
      summary: information about specifications that this API conforms to
      description: |-
        A list of all conformance classes specified in a standard that the
        server conforms to.
      operationId: getConformanceDeclaration
      responses:
        '200':
          $ref: 'responses/ConformanceDeclaration.yaml'
        '4XX':
          $ref: 'responses/BadRequest.yaml'
        '406':
          $ref: 'responses/NotAcceptable.yaml'
        '5XX':
          $ref: 'responses/ServerError.yaml'
  '/collections':
    get:
      tags:
        - Collections
      summary: the record collections
      description: |-
        Fetch list of catalogs offered by this API
      operationId: getCollections
      responses:
        '200':
          $ref: 'responses/Catalogs.yaml'
        '4XX':
          $ref: 'responses/BadRequest.yaml'
        '406':
          $ref: 'responses/NotAcceptable.yaml'
        '500':
          $ref: 'responses/ServerError.yaml'
  '/collections/{catalogId}':
    get:
      tags:
        - Collection
      summary: |-
        describe the record collection with id `catalogId`
      description: |-
        Fetch a detailed description of the catalog with id `catalogId`.
      operationId: describeCollection
      parameters:
        - $ref: 'parameters/catalogId.yaml'
        - $ref: 'https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/./parameters/bbox.yaml'
        - $ref: 'https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/./parameters/datetime.yaml'
        - $ref: 'https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/./parameters/limit.yaml'
        - $ref: 'parameters/q.yaml'
        - $ref: 'parameters/type.yaml'
        - $ref: 'parameters/externalIds.yaml'
        - $ref: 'parameters/ids.yaml'
        - $ref: 'parameters/sortby.yaml'
      responses:
        '200':
          $ref: 'responses/Catalog.yaml'
        '4XX':
          $ref: 'responses/BadRequest.yaml'
        '404':
          $ref: 'responses/NotFound.yaml'
        '406':
          $ref: 'responses/NotAcceptable.yaml'
        '5XX':
          $ref: 'responses/ServerError.yaml'
  '/collections/{catalogId}/sortables':
    get:
      tags:
        - Sortables
      summary: |-
       get the list of sortable properties
      description: |-
        Fetch the list of properties which can be used to sort the getRecords
        response.
      operationId: getSortables
      parameters:
        - $ref: 'parameters/catalogId.yaml'
      responses:
        '200':
          $ref: 'responses/Sortables.yaml'
        '4XX':
          $ref: 'responses/BadRequest.yaml'
        '404':
          $ref: 'responses/NotFound.yaml'
        '406':
          $ref: 'responses/NotAcceptable.yaml'
        '5XX':
          $ref: 'responses/ServerError.yaml'
  '/collections/{catalogId}/items':
    get:
      tags:
        - Records
      summary: fetch records
      description: |-
        Fetch records of the record collection with id `catalogId`.

        Every record in a dataset belongs to a collection. A dataset may
        consist of multiple record collections. A record collection is often a
        collection of records of a similar type, based on a common schema.

        Use content negotiation to request HTML or GeoJSON.
      operationId: getRecords
      parameters:
        - $ref: 'https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/./parameters/bbox.yaml'
        - $ref: 'https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/./parameters/datetime.yaml'
        - $ref: 'https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/./parameters/limit.yaml'
        - $ref: 'parameters/catalogId.yaml'
        - $ref: 'parameters/q.yaml'
        - $ref: 'parameters/type.yaml'
        - $ref: 'parameters/externalIds.yaml'
        - $ref: 'parameters/ids.yaml'
        - $ref: 'parameters/sortby.yaml'
      responses:
        '200':
          $ref: 'responses/Records.yaml'
        '4XX':
          $ref: 'responses/BadRequest.yaml'
        '404':
          $ref: 'responses/NotFound.yaml'
        '406':
          $ref: 'responses/NotAcceptable.yaml'
        '5XX':
          $ref: 'responses/ServerError.yaml'
  '/collections/{catalogId}/items/{recordId}':
    get:
      tags:
        - Record
      summary: fetch a single record
      description: |-
        Fetch the record with id `recordId` in the record collection
        with id `catalogId`.

        Use content negotiation to request HTML or GeoJSON.
      operationId: getRecord
      parameters:
        - $ref: 'parameters/catalogId.yaml'
        - $ref: 'parameters/recordId.yaml'
      responses:
        '200':
          $ref: 'responses/Record.yaml'
        '4XX':
          $ref: 'responses/BadRequest.yaml'
        '404':
          $ref: 'responses/NotFound.yaml'
        '406':
          $ref: 'responses/NotAcceptable.yaml'
        '5XX':
          $ref: 'responses/ServerError.yaml'
components:
  securitySchemes:
    openIdConnect:
      type: "openIdConnect"
      openIdConnectUrl: "https://accounts.google.com/.well-known/openid-configuration"
security:
  - openIdConnect: []
